#include <stdio.h>

/*2193번 이친수 문제, n이 자릿수를 의미한다면
n = 1 -> 1
n = 2 -> 10
n = 3 -> 100, 101
n = 4 -> 1010, 1000, 1001 ... 을 가질 수 있다.
잘 살펴보면, 이친수란 '10' 으로 시작하는 숫자란 걸 알 수있다.(2자리 이상일 때)
n = 4일때, 10 이후에 2자리 숫자가 들어가야하는데, 10, 00, 01 이 들어갈 수있는 걸 확인할 수있다.
근데 잘 살펴보면, 이 숫자들은 n = 2, n = 3 일때 뒤에 두자리 수 숫자들이다.
즉, 길이가 N 인 이친수는 'N - 2번째 이친수 갯수 + N - 1번째 이친수 갯수' 란걸 확인할 수 있으며, 이를 점화식으로 나타내면
d[N] = d[N - 2] + d[N -1]을 구할 수 있다(피보나치와 비숫함)
근데 1<= N <= 90 범위를 가지므로 int형 범위를 넘어선다. 그래서 long long을 선언해 준다.
*/

int main(void)
{
    int i, n; 
    scanf("%d",&n);
    long long int d[91];
    d[0] = 0; 
    d[1] = 1;
    for(i = 2; i <= n; i++){
        d[i] = d[i - 1] + d[i - 2];
    }
    printf("%lld\n", d[n]);
}